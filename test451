{"metadata":{"language_info":{"name":"scala","mimetype":"text/x-scala","codemirror_mode":"text/x-scala","pygments_lexer":"scala"},"kernelspec":{"name":"sparkkernel","display_name":"Spark","language":""},"qubole":{"kernel_log_url":"https://azure-release.qubole.net/jupyter-notebook-8252/qubole/api/v1/kernel_logs/44afb18c-7599-41f6-b882-25e04f54e73a","session_data":{"id":0,"mode":"scoped","spark_ui_url":"/cluster-proxy?clusterInst=6361\u0026encodedUrl=http%3A%2F%2F10.10.0.54%3A8088%2Fproxy%2Fapplication_1579690050076_0001%2F%3Fspark%3Dtrue","driver_log_url":"/cluster-proxy?clusterInst=6361\u0026encodedUrl=http%3A%2F%2F10.10.0.55%3A8042%2Fnode%2Fcontainerlogs%2Fcontainer_1579690050076_0001_01_000001%2Fquboleregression%2Bnotebooks"}}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":" ## This is a scala example notebook\n- Supported magics can be found via %%help\n- %%markdown: markdown or Select \"Markdown\" from Cell type dropdown\n- %%sql: sql on spark\n- %%bash or %%sh: shell\n- %%local: Execution in kernel\n- %%configure: Can be used to configure Spark settings","metadata":{}},{"cell_type":"markdown","source":"### Run spark command\n- SparkContext is available as sc\n- Spark application is started lazily on the first Spark command run","metadata":{}},{"cell_type":"code","source":"sc.version","metadata":{"qubole":{"execution_info":{"started_at":"2020-01-22T11:14:24.016043Z","ended_at":"2020-01-22T11:16:06.201737Z","user_email":"quboleregression+notebooks@qu-test.com","cluster":"spark"}},"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"Kernel Id: 44afb18c-7599-41f6-b882-25e04f54e73a\nStarting Spark application\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"\u003cIPython.core.display.HTML object\u003e","text/html":"\u003ctable\u003e\n\u003ctr\u003e\u003cth\u003eID\u003c/th\u003e\u003cth\u003eName\u003c/th\u003e\u003cth\u003eYARN Application ID\u003c/th\u003e\u003cth\u003eKind\u003c/th\u003e\u003cth\u003eState\u003c/th\u003e\u003cth\u003eSpark UI\u003c/th\u003e\u003cth\u003eDriver log\u003c/th\u003e\u003cth\u003eCurrent session?\u003c/th\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e0\u003c/td\u003e\u003ctd\u003escoped_quboleregression+notebooks__qutest_default\u003c/td\u003e\u003ctd\u003eapplication_1579690050076_0001\u003c/td\u003e\u003ctd\u003espark\u003c/td\u003e\u003ctd\u003eidle\u003c/td\u003e\u003ctd\u003e\u003ca class=\"jpq-ui-links\" data-url=\"/cluster-proxy?clusterInst=6361\u0026encodedUrl=http%3A%2F%2F10.10.0.54%3A8088%2Fproxy%2Fapplication_1579690050076_0001%2F%3Fspark%3Dtrue\" data-alt-url=\"\" data-action=\"spark-ui:open\" data-cluster-id=\"8252\" href=\"javascript:void(0)\" onClick=\"return false;\"\u003eLink\u003c/a\u003e\u003c/td\u003e\u003ctd\u003e\u003ca class=\"jpq-ui-links\" data-url=\"/cluster-proxy?clusterInst=6361\u0026encodedUrl=http%3A%2F%2F10.10.0.55%3A8042%2Fnode%2Fcontainerlogs%2Fcontainer_1579690050076_0001_01_000001%2Fquboleregression%2Bnotebooks\" data-alt-url=\"/cluster-proxy?clusterInst=6361\u0026encodedUrl=http%3A%2F%2F10.10.0.54%3A19888%2Fjobhistory%2Flogs%2F10.10.0.55%3A45454%2Fcontainer_1579690050076_0001_01_000001%2Fcontainer_1579690050076_0001_01_000001%2Fquboleregression\" data-action=\"driver-log:open\" data-cluster-id=\"8252\" href=\"javascript:void(0)\" onClick=\"return false;\"\u003eLink\u003c/a\u003e\u003c/td\u003e\u003ctd\u003eâœ”\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e"},"metadata":{}},{"name":"stdout","text":"SparkSession available as 'spark'.\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"\u003cIPython.core.display.HTML object\u003e","text/html":"\u003cdiv class=\"progress-ipython-shell\"\u003e\u003c/div\u003e"},"metadata":{}},{"name":"stdout","text":"res2: String = 2.4.3\n","output_type":"stream"}]},{"cell_type":"markdown","source":"### Scala SparkPi Example","metadata":{}},{"cell_type":"code","source":"import scala.math.random\nimport org.apache.spark._\nval slices = 6 \nval n = 100000 * slices\nval count = sc.parallelize(1 to n, slices).map { i =\u003e\n  val x = random * 2 - 1\n  val y = random * 2 - 1\n  if (x*x + y*y \u003c 1) 1 else 0\n}.reduce(_ + _)\nprintln(\"Pi is roughly \" + 4.0 * count / n)","metadata":{"qubole":{"spark_progress":[{"jobId":0,"name":"reduce at \u003cconsole\u003e:37","submissionTime":"2020-01-22T11:16:11.854GMT","completionTime":"2020-01-22T11:16:13.986GMT","stageIds":[0],"jobGroup":"3","status":"SUCCEEDED","numTasks":6,"numActiveTasks":0,"numCompletedTasks":6,"numSkippedTasks":0,"numFailedTasks":0,"numKilledTasks":0,"numCompletedIndices":6,"numActiveStages":0,"numCompletedStages":1,"numSkippedStages":0,"numFailedStages":0,"killedTasksSummary":{},"jobUrl":"/cluster-proxy?clusterInst=6361\u0026encodedUrl=http%3A%2F%2F10.10.0.54%3A8088%2Fproxy%2Fapplication_1579690050076_0001%2F%3Fspark%3Dtruejobs/job/?id=0","stages":[{"stageId":0,"numTasks":6,"numCompleteTasks":6,"stageUrl":"/cluster-proxy?clusterInst=6361\u0026encodedUrl=http%3A%2F%2F10.10.0.54%3A8088%2Fproxy%2Fapplication_1579690050076_0001%2F%3Fspark%3Dtruestages/stage/?id=0\u0026attempt=0"}]}],"execution_info":{"started_at":"2020-01-22T11:16:06.204027Z","ended_at":"2020-01-22T11:16:14.799405Z","user_email":"quboleregression+notebooks@qu-test.com","cluster":"spark"}},"trusted":true},"execution_count":2,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u003cIPython.core.display.HTML object\u003e","text/html":"\u003cdiv class=\"progress-ipython-shell\"\u003e\u003c/div\u003e"},"metadata":{}},{"name":"stdout","text":"import scala.math.random\nimport org.apache.spark._\nslices: Int = 6\nn: Int = 600000\ncount: Int = 471686\nPi is roughly 3.144573333333333\n","output_type":"stream"}]},{"cell_type":"markdown","source":"### Top 10 words in dataset in s3","metadata":{}},{"cell_type":"code","source":"val file = scala.io.Source.fromURL(\"https://gist.githubusercontent.com/bawejakunal/1083e72c5b572878aca31aa63b49d413/raw/2b419c0e139d63a4b9494500e0b9fc93dbc463ce/sample.txt\").mkString\nval counts = sc.parallelize(file.split(\" \")).\nmap(word =\u003e (word, 1)).reduceByKey(_+_).\nmap(item =\u003e item.swap).  // interchanges position of entries in each tuple\nsortByKey(false).\nmap(item =\u003e item.swap).  // interchanges position of entries in each tuple\ntake(10)\n\ncounts.foreach(println)\n","metadata":{"qubole":{"spark_progress":[{"jobId":2,"name":"take at \u003cconsole\u003e:36","submissionTime":"2020-01-22T11:16:21.458GMT","completionTime":"2020-01-22T11:16:21.834GMT","stageIds":[5,3,4],"jobGroup":"4","status":"SUCCEEDED","numTasks":5,"numActiveTasks":0,"numCompletedTasks":5,"numSkippedTasks":2,"numFailedTasks":0,"numKilledTasks":0,"numCompletedIndices":3,"numActiveStages":-1,"numCompletedStages":2,"numSkippedStages":1,"numFailedStages":0,"killedTasksSummary":{},"jobUrl":"/cluster-proxy?clusterInst=6361\u0026encodedUrl=http%3A%2F%2F10.10.0.54%3A8088%2Fproxy%2Fapplication_1579690050076_0001%2F%3Fspark%3Dtruejobs/job/?id=2","stages":[{"stageId":5,"numTasks":1,"numCompleteTasks":1,"stageUrl":"/cluster-proxy?clusterInst=6361\u0026encodedUrl=http%3A%2F%2F10.10.0.54%3A8088%2Fproxy%2Fapplication_1579690050076_0001%2F%3Fspark%3Dtruestages/stage/?id=5\u0026attempt=0"},{"stageId":3,"numTasks":2,"numCompleteTasks":2,"stageUrl":"/cluster-proxy?clusterInst=6361\u0026encodedUrl=http%3A%2F%2F10.10.0.54%3A8088%2Fproxy%2Fapplication_1579690050076_0001%2F%3Fspark%3Dtruestages/stage/?id=3\u0026attempt=0"},{"stageId":4,"numTasks":2,"numCompleteTasks":2,"stageUrl":"/cluster-proxy?clusterInst=6361\u0026encodedUrl=http%3A%2F%2F10.10.0.54%3A8088%2Fproxy%2Fapplication_1579690050076_0001%2F%3Fspark%3Dtruestages/stage/?id=4\u0026attempt=0"}]},{"jobId":1,"name":"sortByKey at \u003cconsole\u003e:34","submissionTime":"2020-01-22T11:16:20.018GMT","completionTime":"2020-01-22T11:16:21.325GMT","stageIds":[1,2],"jobGroup":"4","status":"SUCCEEDED","numTasks":4,"numActiveTasks":0,"numCompletedTasks":4,"numSkippedTasks":0,"numFailedTasks":0,"numKilledTasks":0,"numCompletedIndices":4,"numActiveStages":0,"numCompletedStages":2,"numSkippedStages":0,"numFailedStages":0,"killedTasksSummary":{},"jobUrl":"/cluster-proxy?clusterInst=6361\u0026encodedUrl=http%3A%2F%2F10.10.0.54%3A8088%2Fproxy%2Fapplication_1579690050076_0001%2F%3Fspark%3Dtruejobs/job/?id=1","stages":[{"stageId":1,"numTasks":2,"numCompleteTasks":2,"stageUrl":"/cluster-proxy?clusterInst=6361\u0026encodedUrl=http%3A%2F%2F10.10.0.54%3A8088%2Fproxy%2Fapplication_1579690050076_0001%2F%3Fspark%3Dtruestages/stage/?id=1\u0026attempt=0"},{"stageId":2,"numTasks":2,"numCompleteTasks":2,"stageUrl":"/cluster-proxy?clusterInst=6361\u0026encodedUrl=http%3A%2F%2F10.10.0.54%3A8088%2Fproxy%2Fapplication_1579690050076_0001%2F%3Fspark%3Dtruestages/stage/?id=2\u0026attempt=0"}]}],"execution_info":{"started_at":"2020-01-22T11:16:14.812858Z","ended_at":"2020-01-22T11:16:23.279206Z","user_email":"quboleregression+notebooks@qu-test.com","cluster":"spark"}},"trusted":true},"execution_count":3,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u003cIPython.core.display.HTML object\u003e","text/html":"\u003cdiv class=\"progress-ipython-shell\"\u003e\u003c/div\u003e"},"metadata":{}},{"name":"stdout","text":"file: String =\nThis is a sample text file\nThis file is to be used for Python Open Labs 11\nI hope you practised and learned well in the previous sessions\nBut as is human nature, out of sight is out of mind\nI hope you have been practising your python\nLets put your programming to test today\nThere are no full stops in this file, because this class is about learning and learning never stops just like my cheesy lame lines\nThanks for your patience\nThis is an update on gist for testing embedding.\ncounts: Array[(String, Int)] = Array((is,6), (for,3), (your,3), (this,2), (learning,2), (hope,2), (out,2), (you,2), (to,2), (in,2))\n(is,6)\n(for,3)\n(your,3)\n(this,2)\n(learning,2)\n(hope,2)\n(out,2)\n(you,2)\n(to,2)\n(in,2)\n","output_type":"stream"}]},{"cell_type":"markdown","source":"### sql example","metadata":{}},{"cell_type":"code","source":"%%sql\nshow tables","metadata":{"qubole":{"spark_progress":[{"jobId":4,"name":"take at \u003cconsole\u003e:29","submissionTime":"2020-01-22T11:16:45.841GMT","completionTime":"2020-01-22T11:16:45.992GMT","stageIds":[7],"jobGroup":"5","status":"SUCCEEDED","numTasks":1,"numActiveTasks":0,"numCompletedTasks":1,"numSkippedTasks":0,"numFailedTasks":0,"numKilledTasks":0,"numCompletedIndices":1,"numActiveStages":0,"numCompletedStages":1,"numSkippedStages":0,"numFailedStages":0,"killedTasksSummary":{},"jobUrl":"/cluster-proxy?clusterInst=6361\u0026encodedUrl=http%3A%2F%2F10.10.0.54%3A8088%2Fproxy%2Fapplication_1579690050076_0001%2F%3Fspark%3Dtruejobs/job/?id=4","stages":[{"stageId":7,"numTasks":1,"numCompleteTasks":1,"stageUrl":"/cluster-proxy?clusterInst=6361\u0026encodedUrl=http%3A%2F%2F10.10.0.54%3A8088%2Fproxy%2Fapplication_1579690050076_0001%2F%3Fspark%3Dtruestages/stage/?id=7\u0026attempt=0"}]},{"jobId":3,"name":"take at \u003cconsole\u003e:29","submissionTime":"2020-01-22T11:16:41.193GMT","completionTime":"2020-01-22T11:16:45.821GMT","stageIds":[6],"jobGroup":"5","status":"SUCCEEDED","numTasks":1,"numActiveTasks":0,"numCompletedTasks":1,"numSkippedTasks":0,"numFailedTasks":0,"numKilledTasks":0,"numCompletedIndices":1,"numActiveStages":0,"numCompletedStages":1,"numSkippedStages":0,"numFailedStages":0,"killedTasksSummary":{},"jobUrl":"/cluster-proxy?clusterInst=6361\u0026encodedUrl=http%3A%2F%2F10.10.0.54%3A8088%2Fproxy%2Fapplication_1579690050076_0001%2F%3Fspark%3Dtruejobs/job/?id=3","stages":[{"stageId":6,"numTasks":1,"numCompleteTasks":1,"stageUrl":"/cluster-proxy?clusterInst=6361\u0026encodedUrl=http%3A%2F%2F10.10.0.54%3A8088%2Fproxy%2Fapplication_1579690050076_0001%2F%3Fspark%3Dtruestages/stage/?id=6\u0026attempt=0"}]}],"execution_info":{"started_at":"2020-01-22T11:16:23.281934Z","ended_at":"2020-01-22T11:16:48.293309Z","user_email":"quboleregression+notebooks@qu-test.com","cluster":"spark"}},"trusted":true},"execution_count":4,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u003cIPython.core.display.HTML object\u003e","text/html":"\u003cdiv class=\"progress-ipython-shell\"\u003e\u003c/div\u003e"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u003cIPython.core.display.HTML object\u003e","text/html":"\u003cdiv class=\"progress-ipython-shell\"\u003e\u003c/div\u003e"},"metadata":{}},{"name":"stdout","text":"","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"VBox(children=(HBox(children=(HTML(value='Type:'), Button(description='Table', layout=Layout(width='70px'), stâ€¦","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"a9b9f95e00b64826b31d555994b7a451"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Output()","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"7702560eecba47849736b5418691c4ce"}},"metadata":{}}]},{"cell_type":"code","source":"// Alternate way to use spark sql\nspark.sql(\"show tables\").collect","metadata":{"qubole":{"execution_info":{"started_at":"2020-01-22T11:16:48.301105Z","ended_at":"2020-01-22T11:16:51.041398Z","user_email":"quboleregression+notebooks@qu-test.com","cluster":"spark"}},"trusted":true},"execution_count":5,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u003cIPython.core.display.HTML object\u003e","text/html":"\u003cdiv class=\"progress-ipython-shell\"\u003e\u003c/div\u003e"},"metadata":{}},{"name":"stdout","text":"res8: Array[org.apache.spark.sql.Row] = Array([default,default_qubole_airline_origin_destination,false], [default,default_qubole_memetracker,false], [default,salesdata,false])\n","output_type":"stream"}]},{"cell_type":"code","source":"%%sql\nselect * from default_qubole_memetracker limit 10","metadata":{"qubole":{"spark_progress":[{"jobId":5,"name":"take at \u003cconsole\u003e:29","submissionTime":"2020-01-22T11:17:01.227GMT","completionTime":"2020-01-22T11:17:36.462GMT","stageIds":[9,8],"jobGroup":"7","status":"SUCCEEDED","numTasks":222,"numActiveTasks":0,"numCompletedTasks":222,"numSkippedTasks":0,"numFailedTasks":0,"numKilledTasks":0,"numCompletedIndices":222,"numActiveStages":0,"numCompletedStages":2,"numSkippedStages":0,"numFailedStages":0,"killedTasksSummary":{},"jobUrl":"/cluster-proxy?clusterInst=6361\u0026encodedUrl=http%3A%2F%2F10.10.0.54%3A8088%2Fproxy%2Fapplication_1579690050076_0001%2F%3Fspark%3Dtruejobs/job/?id=5","stages":[{"stageId":9,"numTasks":1,"numCompleteTasks":1,"stageUrl":"/cluster-proxy?clusterInst=6361\u0026encodedUrl=http%3A%2F%2F10.10.0.54%3A8088%2Fproxy%2Fapplication_1579690050076_0001%2F%3Fspark%3Dtruestages/stage/?id=9\u0026attempt=0"},{"stageId":8,"numTasks":221,"numCompleteTasks":221,"stageUrl":"/cluster-proxy?clusterInst=6361\u0026encodedUrl=http%3A%2F%2F10.10.0.54%3A8088%2Fproxy%2Fapplication_1579690050076_0001%2F%3Fspark%3Dtruestages/stage/?id=8\u0026attempt=0"}]}],"execution_info":{"started_at":"2020-01-22T11:16:51.049672Z","ended_at":"2020-01-22T11:17:38.551858Z","user_email":"quboleregression+notebooks@qu-test.com","cluster":"spark"}},"trusted":true},"execution_count":6,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u003cIPython.core.display.HTML object\u003e","text/html":"\u003cdiv class=\"progress-ipython-shell\"\u003e\u003c/div\u003e"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u003cIPython.core.display.HTML object\u003e","text/html":"\u003cdiv class=\"progress-ipython-shell\"\u003e\u003c/div\u003e"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"VBox(children=(HBox(children=(HTML(value='Type:'), Button(description='Table', layout=Layout(width='70px'), stâ€¦","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"2f2c082e8b72485280adf297b708f6f5"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Output()","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"8945218af7f543ed9d37dddde996ef72"}},"metadata":{}}]},{"cell_type":"markdown","source":"### Visualizations on airline data for four quarters","metadata":{}},{"cell_type":"code","source":"%%sql\nselect origin, quarter, count(*)/1000000 count from default_qubole_airline_origin_destination\n  where quarter is not NULL group by origin, quarter order by count desc limit 100\n","metadata":{"qubole":{"spark_progress":[{"jobId":6,"name":"take at \u003cconsole\u003e:30","submissionTime":"2020-01-22T11:17:42.347GMT","completionTime":"2020-01-22T11:20:19.574GMT","stageIds":[12,10,11],"jobGroup":"8","status":"SUCCEEDED","numTasks":213,"numActiveTasks":0,"numCompletedTasks":213,"numSkippedTasks":0,"numFailedTasks":0,"numKilledTasks":0,"numCompletedIndices":213,"numActiveStages":0,"numCompletedStages":3,"numSkippedStages":0,"numFailedStages":0,"killedTasksSummary":{},"jobUrl":"/cluster-proxy?clusterInst=6361\u0026encodedUrl=http%3A%2F%2F10.10.0.54%3A8088%2Fproxy%2Fapplication_1579690050076_0001%2F%3Fspark%3Dtruejobs/job/?id=6","stages":[{"stageId":12,"numTasks":1,"numCompleteTasks":1,"stageUrl":"/cluster-proxy?clusterInst=6361\u0026encodedUrl=http%3A%2F%2F10.10.0.54%3A8088%2Fproxy%2Fapplication_1579690050076_0001%2F%3Fspark%3Dtruestages/stage/?id=12\u0026attempt=0"},{"stageId":10,"numTasks":12,"numCompleteTasks":12,"stageUrl":"/cluster-proxy?clusterInst=6361\u0026encodedUrl=http%3A%2F%2F10.10.0.54%3A8088%2Fproxy%2Fapplication_1579690050076_0001%2F%3Fspark%3Dtruestages/stage/?id=10\u0026attempt=0"},{"stageId":11,"numTasks":200,"numCompleteTasks":200,"stageUrl":"/cluster-proxy?clusterInst=6361\u0026encodedUrl=http%3A%2F%2F10.10.0.54%3A8088%2Fproxy%2Fapplication_1579690050076_0001%2F%3Fspark%3Dtruestages/stage/?id=11\u0026attempt=0"}]}],"execution_info":{"started_at":"2020-01-22T11:17:38.560398Z","ended_at":"2020-01-22T11:20:22.370755Z","user_email":"quboleregression+notebooks@qu-test.com","cluster":"spark"}},"trusted":true},"execution_count":7,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u003cIPython.core.display.HTML object\u003e","text/html":"\u003cdiv class=\"progress-ipython-shell\"\u003e\u003c/div\u003e"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u003cIPython.core.display.HTML object\u003e","text/html":"\u003cdiv class=\"progress-ipython-shell\"\u003e\u003c/div\u003e"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"VBox(children=(HBox(children=(HTML(value='Type:'), Button(description='Table', layout=Layout(width='70px'), stâ€¦","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ff33068e0052429daa206b6aa11fe80a"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Output()","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"04a101c522834d6abc4adcceb2421683"}},"metadata":{}}]},{"cell_type":"markdown","source":"### Matplotlib example using store and local magic\n- Using \"-o\" with sql stores the data in the specified variable in the kernel","metadata":{}},{"cell_type":"code","source":"%%sql -o data -q\nselect * from default_qubole_airline_origin_destination limit 10","metadata":{"qubole":{"spark_progress":[{"jobId":7,"name":"take at \u003cconsole\u003e:29","submissionTime":"2020-01-22T11:20:24.814GMT","completionTime":"2020-01-22T11:20:26.955GMT","stageIds":[13,14],"jobGroup":"9","status":"SUCCEEDED","numTasks":13,"numActiveTasks":0,"numCompletedTasks":13,"numSkippedTasks":0,"numFailedTasks":0,"numKilledTasks":0,"numCompletedIndices":13,"numActiveStages":0,"numCompletedStages":2,"numSkippedStages":0,"numFailedStages":0,"killedTasksSummary":{},"jobUrl":"/cluster-proxy?clusterInst=6361\u0026encodedUrl=http%3A%2F%2F10.10.0.54%3A8088%2Fproxy%2Fapplication_1579690050076_0001%2F%3Fspark%3Dtruejobs/job/?id=7","stages":[{"stageId":13,"numTasks":12,"numCompleteTasks":12,"stageUrl":"/cluster-proxy?clusterInst=6361\u0026encodedUrl=http%3A%2F%2F10.10.0.54%3A8088%2Fproxy%2Fapplication_1579690050076_0001%2F%3Fspark%3Dtruestages/stage/?id=13\u0026attempt=0"},{"stageId":14,"numTasks":1,"numCompleteTasks":1,"stageUrl":"/cluster-proxy?clusterInst=6361\u0026encodedUrl=http%3A%2F%2F10.10.0.54%3A8088%2Fproxy%2Fapplication_1579690050076_0001%2F%3Fspark%3Dtruestages/stage/?id=14\u0026attempt=0"}]}],"execution_info":{"started_at":"2020-01-22T11:20:22.378298Z","ended_at":"2020-01-22T11:20:28.556209Z","user_email":"quboleregression+notebooks@qu-test.com","cluster":"spark"}},"trusted":true},"execution_count":8,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u003cIPython.core.display.HTML object\u003e","text/html":"\u003cdiv class=\"progress-ipython-shell\"\u003e\u003c/div\u003e"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u003cIPython.core.display.HTML object\u003e","text/html":"\u003cdiv class=\"progress-ipython-shell\"\u003e\u003c/div\u003e"},"metadata":{}}]},{"cell_type":"markdown","source":"### Matplotlib can be used alongwith %%local to plot stored data","metadata":{}},{"cell_type":"code","source":"%%local\n%matplotlib inline\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndata['distance'] = pd.to_numeric(data['distance'], errors='coerce')\ndata.plot(kind='bar', x='dest', y='distance', color='blue')\n\nplt.show()","metadata":{"qubole":{"execution_info":{"started_at":"2020-01-22T11:20:28.567895Z","ended_at":"2020-01-22T11:20:30.795134Z","user_email":"quboleregression+notebooks@qu-test.com","cluster":"spark"}},"trusted":true},"execution_count":9,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u003cFigure size 432x288 with 1 Axes\u003e","image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}